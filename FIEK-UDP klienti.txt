from socket import *
from fileinput import *
from sys import exit

port=12002
portS=12001
Ip="localhost"

ClientSocket = socket(AF_INET, SOCK_DGRAM)
ClientSocket.bind(('', port))
ClientSocket.settimeout(5.0)

print("-------------Klienti UDP--------------")
#ip = raw_input('Server IP (localhost) : ')
#portS = int(raw_input('Server Port (9000): '))

def ip():
    message = "IP "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nuk ka kthyer pergjigje"
    menu()
  
def port():
    message = "PORT "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nuk ka kthyer pergjigje"
    menu()

def zanore():
    message = "ZANORE "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def printo():
    message = "PRINTO "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def host():
    message = "HOST "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nuk ka kthyer pergjigje"
    menu()
 
def time():
    message = "TIME "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def keno():
    message = "KENO "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def faktoriel():
    message = "FAKTORIEL "
    fakt = raw_input('Kerko faktorielin e numrit: ')
    message = message+fakt
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()    

def konverto():
    message = "KONVERTO "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M1():
    message = "M1 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M2():
    message = "M2 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()
    
def M3():
    message = "M3 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M4():
    message = "M5 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M5():
    message = "M5 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M6():
    message = "M6 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()
    
def M7():
    message = "M7 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()

def M8():
    message = "M8 "
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()
    
def end():
    ClientSocket.close()
    exit();
    
def freestyle():
    message = raw_input("Request: ")
    #message = message.encode("UTF-8")
    ClientSocket.sendto(message,(Ip,portS)) 
    try:
        response,addr = ClientSocket.recvfrom(1024)
        print response
    except:
        print "Error: Serveri nu ka kthyer pergjigje"
    menu()


def menu():
    print (" ")
    print("---------------------------")
    print("1.OPTIONS")
    print("2.EXIT")
    option = raw_input('Zgjedh opt Numer: ')
    if(option == '1'):
        print (" ")
        print("-------------Options--------------")
        print("1.IP")
        print("2.PORT")
        print("3.ZANORE")
        print("4.PRINTO")
        print("5.HOST")
        print("6.TIME")
        print("7.KENO")
        print("8.FAKTORIEL")
        print("9.KONVERTO")
        print("10.FREESTYLE")
        print("11.INDIVIDUALE")
        print("12.EXIT")    
        option = raw_input('Zgjedh opt Numer: ')
    
        if(option == '1'):
            ip()
        if(option == '2'):
            port()
        if(option == '3'):
            zanore()
        if(option == '4'):
            printo()
        if(option == '5'):
            host()
        if(option == '6'):
            time()
        if(option == '7'):
            keno()
        if(option == '8'):
            faktoriel()
        if(option == '9'):
            konverto()
        if(option == '10'):
            freestyle()
        if(option == '11'):
            print("--------------------")
            print("1.Artan - M1")
            print("2.Artan - M2")
            print("3.Argjent - M1")
            print("4.Argjent - M2")
            print("5.Adriatik - M1")
            print("6.Adriatik - M2")
            print("7.Kaltrina - M1")
            print("8.Kaltrina - M2")
            option = raw_input('Zgjedh opt Numer: ')
            if(option == '1'):
                M1()
            if(option == '2'):
                M2()
            if(option == '3'):
                M3()
            if(option == '4'):
                M4()
            if(option == '5'):
                M5()
            if(option == '6'):
                M6()
            if(option == '7'):
                M7()
            if(option == '8'):
                M8()
            print "Keni shtypur opsion jovalid"
            menu()
        if(option == '12'):
            end()    
        print "Keni shtypur opsion jovalid"
        menu()        
    if(option == '2'):
        end()
    print "Keni shtypur opsion jovalid"
    menu()

menu()
